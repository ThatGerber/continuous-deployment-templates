#cloud-config
packages:
  - ntp
write_files:
  - path: /opt/docker/install.sh
    permissions: "0755"
    content: |
      #!/bin/bash
      DOCKER_VERSION=$1
      apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
      mkdir -p /etc/apt/sources.list.d/
      echo "deb https://apt.dockerproject.org/repo ubuntu-${ubuntu_version} main" > /etc/apt/sources.list.d/docker.list
      apt-get update
      PACKAGES="docker-engine=$DOCKER_VERSION"
      if [ -n "`lsb_release -sd | grep '^Ubuntu 14\.04\.[0-9] LTS$'`" ]; then
        PACKAGES="linux-image-extra-virtual linux-image-extra-$(uname -r) $PACKAGES"
      fi
      apt-get install -y $PACKAGES

  - path: /opt/rancher/rancher.sh
    permissions: "0755"
    content: |
      #!/bin/sh
      set -e
      umask 077

      IMAGE=$1
      if [ "$IMAGE" = "" ]; then
          IMAGE=rancher/server
      fi

      mkdir -p /var/lib/rancher/etc/server
      mkdir -p /var/lib/rancher/etc/ssl
      mkdir -p /var/lib/rancher/bin

      echo Creating /var/lib/rancher/etc/server.conf
      cat > /var/lib/rancher/etc/server.conf << EOF

      CATTLE_DB_CATTLE_MYSQL_HOST=${db_url}
      CATTLE_DB_CATTLE_MYSQL_PORT=${db_port}
      CATTLE_DB_CATTLE_MYSQL_NAME=${db_schema}
      CATTLE_DB_CATTLE_USERNAME=${db_username}
      CATTLE_DB_CATTLE_PASSWORD=${db_password}

      EOF

      echo Creating /var/lib/rancher/bin/rancher-start.sh
      cat > /var/lib/rancher/bin/rancher-start.sh << "EOF"
      #!/bin/sh
      set -e

      IMAGE=$1
      if [ "$IMAGE" = "" ]; then
          echo Usage: $0 DOCKER_IMAGE
          exit 1
      fi

      docker rm -fv rancher-server >/dev/null 2>&1 || true
      ID=`docker run --restart=unless-stopped -d -p ${var.port}:8080 --name rancher-server --env-file /var/lib/rancher/etc/server.conf $IMAGE`

      echo Started container rancher $ID
      echo Run the below to see the logs
      echo
      echo docker logs -f rancher-server
      EOF

      chmod +x /var/lib/rancher/bin/rancher-start.sh

      echo Running: /var/lib/rancher/bin/rancher-start.sh $IMAGE
      echo To re-run please execute: /var/lib/rancher/bin/rancher-start.sh $IMAGE
      exec /var/lib/rancher/bin/rancher-start.sh $IMAGE

runcmd:
  - [ cloud-init-per, once, docker, /opt/docker/install.sh, "${docker_version}~${ubuntu_versions}" ]
  - [ cloud-init-per, once, rancher, /opt/rancher/rancher.sh, "${image}" ]
